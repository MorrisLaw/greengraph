/* Place all the behaviors and hooks related to the matching controller here.
All this logic will automatically be available in application.js.*/

$(document).ready(function() {
  var dataelectric = [
      {
          label: "Commercial",
          value: <%=@commercialelectric%>,
          color:"#70E4EF",
          highlight: "#48efff",
      },
      {
          label: "Residential",
          value: <%=@residentialelectric%>,
          color: "#4D6CFA",
          highlight: "#617eff",
      },
  ]

var optionselectric = {
      //Boolean - Whether we should show a stroke on each segment
      segmentShowStroke : true,

      //String - The colour of each segment stroke
      segmentStrokeColor : "#fff",

      //Number - The width of each segment stroke
      segmentStrokeWidth : 2,

      //Number - The percentage of the chart that we cut out of the middle
      percentageInnerCutout : 50, // This is 0 for Pie charts

      //Number - Amount of animation steps
      animationSteps : 100,

      //String - Animation easing effect
      animationEasing : "easeOutBounce",

      //Boolean - Whether we animate the rotation of the Doughnut
      animateRotate : true,

      //Boolean - Whether we animate scaling the Doughnut from the centre
      animateScale : false,

      legendTemplate : '<ul class=gas-legend>'
                        +  '<li><span style=\"background-color:#F7464A\"></span>Commercial</li>'
                        +  '<li><span style=\"background-color:#46BFBD\"></span>Residential</li>'
                        + '</ul>'
};

  //ugly hack to clear old chart on refresh
  $('#allelectricchart').remove();
  $('#allelectricchartcontainer').append('<canvas id="allelectricchart"></canvas>');

   //draw the total gas usage bar chart
   var cty = document.getElementById("allelectricchart").getContext("2d");
   cty.canvas.width  = $('#allelectricchartcontainer').innerWidth() - 50;
   var allelectricchart = new Chart(cty).Doughnut(dataelectric, optionselectric);
});
